///// Bubble Sort
Bubble Sort is an algorithm that sorts an array from the lowest value to the highest value.
The word 'Bubble' comes from how this algorithm works, it makes the highest values 'bubble up'.

///How it works:

   1 Go through the array, one value at a time.
   2 For each value, compare the value with the next value.
   3 If the value is higher than the next one, swap the values so that the highest value comes last.
   4 Go through the array as many times as there are values in the array.

/// Bubble Sort Improvement

The Bubble Sort algorithm can be improved a little bit more.
If the array is almost sorted already, with the lowest numbers at the start, like this for example:
my_array = [7, 3, 9, 12, 11]

# the array will be sorted after the first run, but the Bubble Sort algorithm will continue to run, without swapping elements, and that is not necessary
with the help of bool operators it can be improved like adding [Sorted = false]
                                                               [sorted = True ]
                                                         if not sorted:
                                                                break:

/// Bubble Sort Time Complexity
The Bubble Sort algorithm loops through every value in the array, comparing it to the value next to it. So for an array of n values, there must be n
such comparisons in one loop.

And after one loop, the array is looped through again and again n times.
This means there are nâ‹…n comparisons done in total, so the time complexity for Bubble Sort is: O(n2)



